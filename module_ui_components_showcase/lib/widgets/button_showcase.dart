part of '../views/showcase.dart';

class _ButtonShowcase extends StatelessWidget {
  const _ButtonShowcase();

  @override
  Widget build(BuildContext context) {
    final appTheme = AppTheme.of(context).theme;

    return Frame(
      title: 'Buttons',
      widgets: _buildButtons(
        context: context,
        appTheme: appTheme,
      ),
    );
  }

  List<Widget> _buildButtons({
    required BuildContext context,
    required IAppThemeData appTheme,
  }) {
    const buttonHeight = 32.0;
    const menuWidth = 214.0;
    final popupMenuActions = [
      ContextMenuAction(
        title: 'Menu item 1',
        onTap: () {},
        itemType: ContextMenuItemType.singleLineContext,
      ),
      ContextMenuAction(
        title: 'Menu item 2',
        onTap: () {},
        itemType: ContextMenuItemType.singleLineContext,
      ),
      ContextMenuAction(
        title: 'Menu item 3',
        itemType: ContextMenuItemType.singleLineContext,
      ),
    ];
    return [
      _spacer,
      Wrap(
        children: [
          PAPButton.shimmerIcon(),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeSquare,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeSquare,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeSquare,
            buttonStyle: PapComponentStyle.secondary,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeSquare,
            buttonStyle: PapComponentStyle.secondary,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeSquare,
            styleType: ButtonStyleType.outline,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeSquare,
            styleType: ButtonStyleType.outline,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeSquare,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeSquare,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeSquare,
            buttonStyle: PapComponentStyle.error,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeSquare,
            buttonStyle: PapComponentStyle.error,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeSquare,
            isBusy: true,
            buttonStyle: PapComponentStyle.error,
          ),
        ],
      ),
      _spacer,
      Wrap(
        children: [
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeTriangle,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeTriangle,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeTriangle,
            buttonStyle: PapComponentStyle.secondary,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeTriangle,
            buttonStyle: PapComponentStyle.secondary,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeTriangle,
            styleType: ButtonStyleType.outline,
            buttonSize: ButtonSize.small,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeTriangle,
            styleType: ButtonStyleType.outline,
            buttonSize: ButtonSize.small,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeTriangle,
            buttonSize: ButtonSize.small,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeTriangle,
            buttonSize: ButtonSize.small,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeTriangle,
            buttonStyle: PapComponentStyle.error,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            icon: appTheme.icons.shapeTriangle,
            buttonStyle: PapComponentStyle.error,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.shapeTriangle,
            isBusy: true,
            buttonStyle: PapComponentStyle.error,
            buttonSize: ButtonSize.small,
          ),
        ],
      ),
      _spacer,
      Wrap(
        children: [
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.copy,
            buttonStyle: PapComponentStyle.secondary,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            size: 50,
            onTap: () {},
            icon: appTheme.icons.copy,
            buttonStyle: PapComponentStyle.secondary,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            size: 50,
            onTap: () {},
            icon: appTheme.icons.copy,
            buttonStyle: PapComponentStyle.secondary,
          ),
          const VerticalDivider(),
          PAPButton.icon(
            size: 70,
            onTap: () {},
            icon: appTheme.icons.copy,
            buttonStyle: PapComponentStyle.secondary,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.copy,
            buttonStyle: PapComponentStyle.secondary,
            isPressed: true,
          ),
        ],
      ),
      _spacer,
      Wrap(
        children: [
          PAPButton.popup(
            title: 'Add',
            icon: appTheme.icons.arrowChevronDown,
            popupMenuWidth: menuWidth,
            popupMenuActions: [
              ContextMenuAction(
                title: 'Menu item 1',
                onTap: () {},
                itemType: ContextMenuItemType.singleLineContext,
              ),
              ContextMenuAction(
                title: 'Menu item 2',
                onTap: () {},
                itemType: ContextMenuItemType.singleLineContext,
              ),
              ContextMenuAction(
                title: 'Menu item 3',
                itemType: ContextMenuItemType.singleLineContext,
              ),
            ],
            onTap: () {},
            height: buttonHeight,
            openPopupIcon: appTheme.icons.arrowChevronUp,
          ),
        ],
      ),
      _spacer,
      // error style button
      Wrap(
        spacing: 10.0,
        runSpacing: 10.0,
        children: [
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            title: 'Error Button',
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            title: 'Error Button with padding',
            horizontalPadding: 60,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isBusy: true,
            title: 'Error Button',
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            title: 'Error Button',
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isBusy: true,
            title: 'Error Button',
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            title: 'Error Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
            isPressed: true,
          ),
          PAPButton.popup(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            title: '',
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
            isBusy: true,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isBusy: true,
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isEnable: false,
            title: 'Error Button',
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isEnable: false,
            title: 'Error Button',
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isEnable: false,
            title: 'Error Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.error,
            onTap: () {},
            isEnable: false,
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
          ),
        ],
      ),
      _spacer,
      // primary style button
      Wrap(
        spacing: 10.0,
        runSpacing: 10.0,
        children: [
          PAPButton.button(
            onTap: () {},
            title: 'Primary Button',
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            onTap: () {},
            title: 'Primary Button',
            buttonSize: ButtonSize.small,
            isBusy: true,
          ),
          PAPButton.button(
            onTap: () {},
            title: 'Primary Button',
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            onTap: () {},
            title: 'Primary Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
            isPressed: true,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
            isBusy: true,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
            isBusy: true,
          ),
          PAPButton.popup(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            title: '',
          ),
          PAPButton.button(
            onTap: () {},
            isEnable: false,
            title: 'Primary Button',
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            onTap: () {},
            isEnable: false,
            title: 'Primary Button',
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            onTap: () {},
            isEnable: false,
            title: 'Primary Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.icon(
            onTap: () {},
            isEnable: false,
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
        ],
      ),
      _spacer,
      // secondary style button
      Wrap(
        spacing: 10.0,
        runSpacing: 10.0,
        children: [
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            title: 'Secondary Button',
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            title: 'Secondary Button',
            isBusy: true,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            title: 'Secondary Button',
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            title: 'Secondary Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
            isPressed: true,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            styleType: ButtonStyleType.fill,
            isBusy: true,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
            isBusy: true,
          ),
          PAPButton.popup(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            title: '',
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            isEnable: false,
            title: 'Secondary Button',
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            isEnable: false,
            title: 'Secondary Button',
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.button(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            isEnable: false,
            title: 'Secondary Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
          ),
          PAPButton.icon(
            buttonStyle: PapComponentStyle.secondary,
            onTap: () {},
            isEnable: false,
            icon: appTheme.icons.homeAlt,
            styleType: ButtonStyleType.fill,
          ),
        ],
      ),
      _spacer,
      // outline style button
      Wrap(
        spacing: 10.0,
        runSpacing: 10.0,
        children: [
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            title: 'Outline Button',
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            title: 'Outline Button with padding',
            buttonSize: ButtonSize.small,
            horizontalPadding: 60,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            title: 'Outline Button',
            buttonSize: ButtonSize.small,
            isBusy: true,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            title: 'Outline Button',
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            title: 'Outline Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            title: 'Outline Button with image icon',
            imageIcon: 'assets/images/sample_avatar.png',
          ),
          PAPButton.icon(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.icon(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.icon(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            isPressed: true,
          ),
          PAPButton.icon(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            isBusy: true,
          ),
          PAPButton.icon(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            isBusy: true,
          ),
          PAPButton.popup(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            buttonSize: ButtonSize.small,
            title: '',
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            isEnable: false,
            title: 'Outline Button',
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            isEnable: false,
            title: 'Outline Button',
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            isEnable: false,
            title: 'Outline Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.icon(
            styleType: ButtonStyleType.outline,
            onTap: () {},
            isEnable: false,
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
        ],
      ),
      _spacer,
      // ghost style button
      Wrap(
        spacing: 10.0,
        runSpacing: 10.0,
        children: [
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            title: 'Ghost Button',
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            title: 'Ghost Button with padding',
            horizontalPadding: 60,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            title: 'Ghost Button',
            isBusy: true,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            title: 'Ghost Button',
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            title: 'Ghost Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            isPressed: true,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            isBusy: true,
          ),
          PAPButton.icon(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            isBusy: true,
          ),
          PAPButton.popup(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            title: '',
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            isEnable: false,
            title: 'Ghost Button',
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            isEnable: false,
            title: 'Ghost Button',
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.button(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            isEnable: false,
            title: 'Ghost Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
          ),
          PAPButton.icon(
            onTap: () {},
            isEnable: false,
            icon: appTheme.icons.homeAlt,
          ),
          PAPButton.popup(
            styleType: ButtonStyleType.plain,
            onTap: () {},
            isEnable: false,
            icon: appTheme.icons.homeAlt,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            title: '',
          ),
        ],
      ),
      // primary style button with popup
      Wrap(
        spacing: 10.0,
        runSpacing: 10.0,
        children: [
          PAPButton.popup(
            onTap: () {},
            title: 'Primary Button',
            buttonSize: ButtonSize.small,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
          ),
          PAPButton.popup(
            onTap: () {},
            title: 'Primary Button',
            icon: appTheme.icons.homeAlt,
            buttonSize: ButtonSize.small,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
          ),
          PAPButton.popup(
            onTap: () {},
            title: 'Primary Button',
            icon: appTheme.icons.homeAlt,
            iconPosition: IconPosition.right,
            buttonSize: ButtonSize.small,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
          ),
          PAPButton.popup(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            title: 'Primary Button',
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            buttonSize: ButtonSize.small,
          ),
          PAPButton.popup(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            title: 'Primary Button',
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
          ),
          PAPButton.popup(
            onTap: () {},
            icon: appTheme.icons.homeAlt,
            popupMenuActions: popupMenuActions,
            popupMenuWidth: 200,
            openPopupIcon: appTheme.icons.arrowChevronUp,
            closePopupIcon: appTheme.icons.arrowChevronDown,
            title: '',
          ),
        ],
      ),
    ];
  }
}
